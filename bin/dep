#!/usr/bin/env ruby

require_relative "../lib/dep"

require "fileutils"
require "clap"

help = File.expand_path("../README.1", File.dirname(__FILE__))
file = nil

commands = Clap.run ARGV,
  "-f"  => lambda { |f| file = f }

@list = Dep::List.new(file || File.join(Dir.pwd, ".gems"))
@prerelease = false

FileUtils.touch(@list.path) unless File.exist?(@list.path)

def add(name)
  res = Gem::SpecFetcher.fetcher.fetch(Gem::Dependency.new(name), false, true, @prerelease)

  abort("Unable to find #{name}") if res.empty?

  spec = res[-1][0]
  lib  = Dep::Lib.new(spec.name, spec.version)

  @list.add(lib)
  @list.save

  puts "dep: added #{lib}"
end

def rm(name)
  @list.remove(Dep::Lib.new(name))
  @list.save

  puts "dep: removed #{name}"
end

def check
  if @list.missing_libraries.empty?
    puts "dep: all cool"
  else
    puts "dep: the following libraries are missing"

    @list.missing_libraries.each do |lib|
      puts "  %s" % lib
    end

    exit(1)
  end
end

def install
  if @list.missing_libraries.empty?
    puts "dep: nothing to install"
    exit
  end

  @list.missing_libraries.each do |lib|
    run "gem install #{lib}"
  end
end

def run(cmd)
  puts "  #{cmd}"
  `#{cmd}`
end

if commands.empty?
  check
end

commands = Clap.run commands,
  "--pre"  => lambda { @prerelease = true },
  "--help" => lambda { exec "man #{help}" }

Clap.run commands,
  "add"     => method(:add),
  "rm"      => method(:rm),
  "install" => method(:install),
  "check"   => method(:check)
